just := env_var_or_default("JUST", just_executable())
wasm_tools := env_var_or_default("WASM_TOOLS", "wasm-tools")
wash := env_var_or_default("WASH", "wash")
tinygo := env_var_or_default("TINYGO", "tinygo")
wit_bindgen := env_var_or_default("WIT_BINDGEN", "wit-bindgen")
cosmo := env_var_or_default("COSMO", "cosmo")
go := env_var_or_default("GO_BIN", "go")

get_constellation_id := "cosmo whoami -o json | jq -r '.user.constellation_ids[0]'"
toml_version := `yq -oy '.version' wasmcloud.toml`
registry_url := "registry.cosmonic.sh"
artifact := "hello-cosmo-go:" + toml_version

expected_wasm_path := "./build/hello-cosmo-go.wasm"
expected_wasm_embed_path := "./build/hello-cosmo-go.embed.wasm"
expected_wasm_component_path := "./build/hello-cosmo-go.component.wasm"
expected_wasm_signed_component_path := "./build/hello-cosmo-go.component_s.wasm"
adapter_path := "./wasi_snapshot_preview1.command.wasm"

expected_wasm_signed_path := "./build/hello-cosmo-go_s.wasm"

_default:
  {{just}} --list

@versions:
  {{tinygo}} version
  {{wash}} --version
  {{wasm_tools}} --version
  {{wit_bindgen}} --version

# Create directories necessary for building
build-dir:
    mkdir -p build

# Build with wash tooling
build: build-dir
  {{go}} generate
  {{wash}} build

# Build with manual tooling
build-manual: build-dir
  {{go}} generate
  {{tinygo}} build -target=wasi -scheduler=none -o {{expected_wasm_path}} .
  {{wasm_tools}} component embed --world hello-cosmo ./wit {{expected_wasm_path}} -o {{expected_wasm_embed_path}}
  {{wasm_tools}} component new {{expected_wasm_embed_path}} --adapt wasi_snapshot_preview1={{adapter_path}} -o {{expected_wasm_component_path}}
  {{wash}} claims sign --name hello-cosmo-go {{expected_wasm_component_path}} -k -q -l

clean:
  rm -rf ./build

# Deploy the wadm manifest
deploy: create-manifest
  @cosmo app deploy ./wadm.yaml
  
# Push the signed actor to the cosmonic registry
push version=toml_version:
  ../put-creds.sh
  {{cosmo}} reg push {{registry_url}}/$({{get_constellation_id}})/{{artifact}} {{expected_wasm_signed_component_path}}

# Check your component wit
check-component:
    {{wasm_tools}} component wit {{expected_wasm_signed_component_path}}

# Create a declarative application manifest for your component
create-manifest:
    @artifact_url={{registry_url}}/$({{get_constellation_id}})/{{artifact}} && \
    sed -e "s|v0\.1\.0|v0.1.0-go|g" -e "s|registry\.cosmonic\.sh/<<constellation_id>>/<<actor_name>>:<<version>>|$artifact_url|g" ../wadm.yaml > wadm.yaml
    @echo "Created manifest at ./wadm.yaml!"
